name: Agent DAG Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'agents/*.md'
      - 'tools/dagcheck/**'
      - '.github/workflows/agent-dag-check.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'agents/*.md'
      - 'tools/dagcheck/**'
      - '.github/workflows/agent-dag-check.yml'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate-dag:
    name: Validate Agent Collaboration DAG
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        check-latest: true
        
    - name: Install Graphviz
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz
        dot -version
        
    - name: Build DAG checker
      run: |
        cd tools/dagcheck
        go build -o dagcheck main.go
        
    - name: Run DAG validation
      shell: bash -euo pipefail {0}
      run: |
        ./tools/dagcheck/dagcheck \
          --dir agents \
          --output docs/agents/dag_report.md \
          --dot docs/agents/agent_dag.dot \
          --png \
          --verbose
          
    - name: Render DAG visuals (png + svg)
      if: ${{ hashFiles('docs/agents/agent_dag.dot') != '' }}
      shell: bash -euo pipefail {0}
      run: |
        dot -Tpng docs/agents/agent_dag.dot -o docs/agents/agent_dag.png
        dot -Tsvg docs/agents/agent_dag.dot -o docs/agents/agent_dag.svg
        echo "‚úÖ Generated DAG visualizations"
        
    - name: Upload DAG report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dag-report
        path: |
          docs/agents/dag_report.md
          docs/agents/agent_dag.dot
          docs/agents/agent_dag.png
          docs/agents/agent_dag.svg
          
    - name: Comment DAG status
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let body = '## üîÑ Agent DAG Validation Report\n\n';
          let ok = true;

          const report = 'docs/agents/dag_report.md';
          try {
            const text = fs.readFileSync(report, 'utf8');
            body += '‚úÖ **PASSED**: The agent collaboration graph is valid\n\n';
            body += '### Report excerpt\n```markdown\n' + text.split('\n').slice(0, 40).join('\n') + '\n```\n';
          } catch (e) {
            ok = false;
            body += '‚ùå **FAILED**: Report not found or unreadable.\n\n';
          }

          if (fs.existsSync('docs/agents/agent_dag.dot')) {
            body += '\n### Visualization (Mermaid, simplified)\n```mermaid\ngraph TD\n';
            const dot = fs.readFileSync('docs/agents/agent_dag.dot', 'utf8');
            const edges = dot.match(/"[^"]*"\\s*->\\s*"[^"]*"/g) || [];
            for (const e of edges) {
              const [from, to] = e.split(/->/).map(s => s.replace(/"/g, '').trim());
              body += `  ${from} --> ${to}\n`;
            }
            body += '```\n';
          }

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body
          });

          if (!ok) core.setFailed('DAG validation failed or report missing');

  update-docs:
    name: Update DAG Documentation
    runs-on: ubuntu-latest
    needs: validate-dag
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dag-report
        path: docs/agents/
        
    - name: Commit documentation
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -n "$(git status --porcelain docs/agents/)" ]; then
          git add docs/agents/
          git commit -m "docs: Update agent DAG report and visualization [skip ci]"
          git push
          echo "‚úÖ Updated DAG documentation"
        else
          echo "‚ÑπÔ∏è No changes to commit"
        fi