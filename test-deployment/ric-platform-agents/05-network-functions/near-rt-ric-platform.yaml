# Near-RT RIC Platform Deployment - Based on oran-network-functions-agent.md
# Implements O-RAN L Release components with xApp Framework 1.5+

---
# Namespace for RIC Platform
apiVersion: v1
kind: Namespace
metadata:
  name: ric-platform
  labels:
    name: ric-platform
    oran.org/release: l-release
    nephio.org/version: r5
    istio-injection: enabled
    security.oran.org/compliance: wg11-v5.0

---
# E2 Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: e2mgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: e2mgr
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/component: e2mgr
    app.kubernetes.io/part-of: ric-platform
    oran.org/interface: e2
    security.oran.org/scanned: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: e2mgr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: e2mgr
        app.kubernetes.io/version: "3.0.0"
        app.kubernetes.io/component: e2mgr
        app.kubernetes.io/part-of: ric-platform
        oran.org/interface: e2
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: e2mgr
        image: nexus3.o-ran-sc.org:10002/o-ran-sc/ric-plt-e2mgr:6.0.4
        imagePullPolicy: Always
        ports:
        - containerPort: 3800
          name: rmr
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: RMR_PORT
          value: "3800"
        - name: HTTP_PORT
          value: "8080"
        - name: GODEBUG
          valueFrom:
            configMapKeyRef:
              name: fips-config
              key: GODEBUG
        - name: E2_INTERFACE_VERSION
          value: "3.0"
        - name: AI_ML_ENABLED
          value: "true"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}

---
# E2 Termination Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: e2term
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: e2term
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/component: e2term
    app.kubernetes.io/part-of: ric-platform
    oran.org/interface: e2
    security.oran.org/scanned: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: e2term
  template:
    metadata:
      labels:
        app.kubernetes.io/name: e2term
        app.kubernetes.io/version: "3.0.0"
        app.kubernetes.io/component: e2term
        app.kubernetes.io/part-of: ric-platform
        oran.org/interface: e2
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: e2term
        image: nexus3.o-ran-sc.org:10002/o-ran-sc/ric-plt-e2:6.0.8
        imagePullPolicy: Always
        ports:
        - containerPort: 36422
          name: sctp
          protocol: SCTP
        - containerPort: 3801
          name: rmr
          protocol: TCP
        env:
        - name: RMR_PORT
          value: "3801"
        - name: SCTP_PORT
          value: "36422"
        - name: GODEBUG
          valueFrom:
            configMapKeyRef:
              name: fips-config
              key: GODEBUG
        - name: E2AP_VERSION
          value: "3.0"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}

---
# A1 Mediator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: a1mediator
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: a1mediator
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/component: a1mediator
    app.kubernetes.io/part-of: ric-platform
    oran.org/interface: a1
    security.oran.org/scanned: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: a1mediator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: a1mediator
        app.kubernetes.io/version: "2.0.0"
        app.kubernetes.io/component: a1mediator
        app.kubernetes.io/part-of: ric-platform
        oran.org/interface: a1
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: a1mediator
        image: nexus3.o-ran-sc.org:10002/o-ran-sc/ric-plt-a1:2.7.0
        imagePullPolicy: Always
        ports:
        - containerPort: 10000
          name: http
          protocol: TCP
        - containerPort: 3802
          name: rmr
          protocol: TCP
        env:
        - name: A1_HTTP_PORT
          value: "10000"
        - name: RMR_PORT
          value: "3802"
        - name: GODEBUG
          valueFrom:
            configMapKeyRef:
              name: fips-config
              key: GODEBUG
        - name: A1_INTERFACE_VERSION
          value: "2.0"
        - name: AI_ML_POLICY_ENABLED
          value: "true"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /a1-p/healthcheck
            port: 10000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /a1-p/healthcheck
            port: 10000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}

---
# Subscription Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: submgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: submgr
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: submgr
    app.kubernetes.io/part-of: ric-platform
    security.oran.org/scanned: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: submgr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: submgr
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: submgr
        app.kubernetes.io/part-of: ric-platform
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: submgr
        image: nexus3.o-ran-sc.org:10002/o-ran-sc/ric-plt-submgr:0.18.1
        imagePullPolicy: Always
        ports:
        - containerPort: 3803
          name: rmr
          protocol: TCP
        - containerPort: 8088
          name: http
          protocol: TCP
        env:
        - name: RMR_PORT
          value: "3803"
        - name: HTTP_PORT
          value: "8088"
        - name: GODEBUG
          valueFrom:
            configMapKeyRef:
              name: fips-config
              key: GODEBUG
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}

---
# xApp Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xappmgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: xappmgr
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/component: xappmgr
    app.kubernetes.io/part-of: ric-platform
    security.oran.org/scanned: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: xappmgr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: xappmgr
        app.kubernetes.io/version: "1.5.0"
        app.kubernetes.io/component: xappmgr
        app.kubernetes.io/part-of: ric-platform
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: xappmgr
        image: nexus3.o-ran-sc.org:10002/o-ran-sc/ric-plt-xapp-manager:0.6.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: XAPP_FRAMEWORK_VERSION
          value: "1.5+"
        - name: GODEBUG
          valueFrom:
            configMapKeyRef:
              name: fips-config
              key: GODEBUG
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}

---
# Database as a Service (Redis) StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dbaas-redis
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: dbaas-redis
    app.kubernetes.io/version: "7.0"
    app.kubernetes.io/component: dbaas
    app.kubernetes.io/part-of: ric-platform
    security.oran.org/scanned: "true"
spec:
  serviceName: dbaas-redis
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: dbaas-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dbaas-redis
        app.kubernetes.io/version: "7.0"
        app.kubernetes.io/component: dbaas
        app.kubernetes.io/part-of: ric-platform
    spec:
      serviceAccountName: ric-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7.0-alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --save
        - "900 1"
        - --loglevel
        - warning
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
# Redis Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-auth
  namespace: ric-platform
type: Opaque
data:
  password: cGxhdGZvcm0tc2VjcmV0LXBhc3N3b3Jk  # platform-secret-password (base64)

---
# Services for RIC Platform Components

# E2 Manager Service
apiVersion: v1
kind: Service
metadata:
  name: e2mgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: e2mgr
    oran.org/interface: e2
spec:
  selector:
    app.kubernetes.io/name: e2mgr
  ports:
  - name: rmr
    port: 3800
    targetPort: 3800
    protocol: TCP
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP

---
# E2 Termination Service
apiVersion: v1
kind: Service
metadata:
  name: e2term
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: e2term
    oran.org/interface: e2
spec:
  selector:
    app.kubernetes.io/name: e2term
  ports:
  - name: sctp
    port: 36422
    targetPort: 36422
    protocol: SCTP
  - name: rmr
    port: 3801
    targetPort: 3801
    protocol: TCP

---
# A1 Mediator Service
apiVersion: v1
kind: Service
metadata:
  name: a1mediator
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: a1mediator
    oran.org/interface: a1
spec:
  selector:
    app.kubernetes.io/name: a1mediator
  ports:
  - name: http
    port: 10000
    targetPort: 10000
    protocol: TCP
  - name: rmr
    port: 3802
    targetPort: 3802
    protocol: TCP

---
# Subscription Manager Service
apiVersion: v1
kind: Service
metadata:
  name: submgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: submgr
spec:
  selector:
    app.kubernetes.io/name: submgr
  ports:
  - name: rmr
    port: 3803
    targetPort: 3803
    protocol: TCP
  - name: http
    port: 8088
    targetPort: 8088
    protocol: TCP

---
# xApp Manager Service
apiVersion: v1
kind: Service
metadata:
  name: xappmgr
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: xappmgr
spec:
  selector:
    app.kubernetes.io/name: xappmgr
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: dbaas-redis
  namespace: ric-platform
  labels:
    app.kubernetes.io/name: dbaas-redis
spec:
  selector:
    app.kubernetes.io/name: dbaas-redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  clusterIP: None  # Headless service for StatefulSet