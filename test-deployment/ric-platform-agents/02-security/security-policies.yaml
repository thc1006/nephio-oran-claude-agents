# O-RAN Security Policies - Based on security-compliance-agent.md
# Implements O-RAN WG11 v5.0 and zero-trust security patterns

---
# Zero-Trust Network Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ric-platform-zero-trust
  namespace: ric-platform
  labels:
    security.oran.org/policy: zero-trust
    nephio.org/version: r5
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ric-platform
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ric-platform
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: ric-platform
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: ric-platform
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
  - to: []  # DNS and external services
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443

---
# Pod Security Standards (Baseline + Restricted)
apiVersion: v1
kind: Namespace
metadata:
  name: ric-platform
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
    security.oran.org/compliance: wg11-v5.0
    nephio.org/version: r5

---
# SPIFFE/SPIRE ClusterSPIFFEID for RIC Platform
apiVersion: spiffeid.spiffe.io/v1beta1
kind: ClusterSPIFFEID
metadata:
  name: ric-platform
  labels:
    security.oran.org/identity: spiffe
spec:
  spiffeIDTemplate: "spiffe://ric-platform.oran.local/ns/{{ .PodMeta.Namespace }}/sa/{{ .PodSpec.ServiceAccountName }}"
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: ric-platform
  federatesWith:
  - "spiffe://oran.local"
  - "spiffe://nephio.local"

---
# Service Account for RIC Platform with SPIFFE identity
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ric-platform
  namespace: ric-platform
  labels:
    security.oran.org/identity: spiffe
  annotations:
    spiffeid.spiffe.io/trust-domain: ric-platform.oran.local

---
# OPA Gatekeeper ConstraintTemplate for Container Security
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: orancompliance
  labels:
    security.oran.org/compliance: wg11-v5.0
spec:
  crd:
    spec:
      names:
        kind: ORanCompliance
      validation:
        properties:
          allowedImages:
            type: array
            items:
              type: string
          requiredLabels:
            type: array
            items:
              type: string
          securityContext:
            type: object
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package orancompliance
        
        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          not starts_with(container.image, input.parameters.allowedImages[_])
          msg := sprintf("Container image '%v' not from approved registry", [container.image])
        }
        
        violation[{"msg": msg}] {
          required := input.parameters.requiredLabels[_]
          not input.review.object.metadata.labels[required]
          msg := sprintf("Missing required label: %v", [required])
        }
        
        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          container.securityContext.privileged == true
          msg := "Privileged containers not allowed in O-RAN deployments"
        }

---
# O-RAN Compliance Constraint
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: ORanCompliance
metadata:
  name: ric-platform-compliance
  labels:
    security.oran.org/compliance: wg11-v5.0
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ric-platform"]
  parameters:
    allowedImages:
      - "o-ran-sc/"
      - "nexus3.o-ran-sc.org:10002/"
      - "gcr.io/nephio-project/"
    requiredLabels:
      - "app.kubernetes.io/name"
      - "app.kubernetes.io/version"
      - "security.oran.org/scanned"
    securityContext:
      runAsNonRoot: true
      readOnlyRootFilesystem: true

---
# Istio PeerAuthentication for mTLS
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: ric-platform-mtls
  namespace: ric-platform
  labels:
    security.oran.org/mtls: strict
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: ric-platform
  mtls:
    mode: STRICT

---
# Istio AuthorizationPolicy for E2 Interface
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: e2-interface-authz
  namespace: ric-platform
  labels:
    security.oran.org/interface: e2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: e2mgr
  rules:
  - from:
    - source:
        principals: ["spiffe://ric-platform.oran.local/ns/ric-platform/sa/e2term"]
    to:
    - operation:
        methods: ["POST", "GET"]
        paths: ["/e2/*"]

---
# Istio AuthorizationPolicy for A1 Interface
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: a1-interface-authz
  namespace: ric-platform
  labels:
    security.oran.org/interface: a1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: a1mediator
  rules:
  - from:
    - source:
        principals: ["spiffe://ric-platform.oran.local/ns/ric-platform/sa/a1-client"]
    to:
    - operation:
        methods: ["PUT", "GET", "DELETE"]
        paths: ["/a1-p/*"]

---
# Certificate for O1 Interface (NETCONF over TLS)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: o1-interface-cert
  namespace: ric-platform
  labels:
    security.oran.org/interface: o1
spec:
  secretName: o1-interface-tls
  issuerRef:
    name: ric-platform-ca
    kind: ClusterIssuer
  commonName: o1.ric-platform.oran.local
  dnsNames:
  - o1.ric-platform.oran.local
  - o1-netconf.ric-platform.svc.cluster.local
  usages:
  - digital signature
  - key encipherment
  - server auth
  - client auth

---
# Falco Rule for Runtime Security
apiVersion: v1
kind: ConfigMap
metadata:
  name: falco-oran-rules
  namespace: falco-system
  labels:
    security.oran.org/runtime: monitoring
data:
  oran_rules.yaml: |
    - rule: Unauthorized Process in RIC Container
      desc: Detect unauthorized processes in RIC platform containers
      condition: >
        spawned_process and
        container and
        k8s.ns.name = "ric-platform" and
        not proc.name in (e2mgr, e2term, a1mediator, submgr, xappmgr, redis-server)
      output: >
        Unauthorized process in RIC container 
        (user=%user.name command=%proc.cmdline 
         container=%container.name image=%container.image.repository)
      priority: CRITICAL
      tags: [oran, security, runtime]

    - rule: Suspicious Network Activity in RIC
      desc: Detect suspicious network connections from RIC containers
      condition: >
        outbound and
        container and
        k8s.ns.name = "ric-platform" and
        not fd.rip in (cluster_ip_range) and
        not fd.rport in (53, 443, 8080, 8443)
      output: >
        Suspicious outbound connection from RIC container
        (user=%user.name command=%proc.cmdline connection=%fd.name 
         container=%container.name image=%container.image.repository)
      priority: WARNING
      tags: [oran, network, security]

    - rule: File Modification in RIC Config
      desc: Detect unauthorized file modifications in RIC configuration
      condition: >
        open_write and
        container and
        k8s.ns.name = "ric-platform" and
        fd.name startswith "/etc/ric" and
        not proc.name in (e2mgr, a1mediator, submgr)
      output: >
        Unauthorized file modification in RIC config
        (user=%user.name file=%fd.name command=%proc.cmdline 
         container=%container.name)
      priority: ERROR
      tags: [oran, filesystem, security]

---
# Trivy VulnerabilityReport CRD for Image Scanning
apiVersion: aquasecurity.github.io/v1alpha1
kind: VulnerabilityReport
metadata:
  name: e2mgr-vulnerability-scan
  namespace: ric-platform
  labels:
    security.oran.org/scan: vulnerability
spec:
  artifact:
    repository: "o-ran-sc/ric-plt-e2mgr"
    tag: "3.0.0"
  registry:
    server: "nexus3.o-ran-sc.org:10002"
  vulnerabilities:
  - vulnerabilityID: "CVE-2023-1234"
    severity: "HIGH"
    title: "Example vulnerability"
    description: "This is an example vulnerability report"
    fixedVersion: "3.0.1"

---
# ConfigMap for FIPS 140-3 Configuration (Go 1.24.6)
apiVersion: v1
kind: ConfigMap
metadata:
  name: fips-config
  namespace: ric-platform
  labels:
    security.oran.org/fips: "140-3"
data:
  GODEBUG: "fips140=on"
  FIPS_MODE: "true"
  CRYPTO_POLICY: "FIPS"
  TLS_MIN_VERSION: "1.3"
  CIPHER_SUITES: "TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256"