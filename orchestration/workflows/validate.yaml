name: validate
description: Security and compliance validation workflow
version: 1.0.0
author: Nephio-O-RAN Team

stages:
  - id: security-scan
    name: Security Scanning
    description: Perform comprehensive security scans
    agent: security-compliance-agent
    inputs:
      scan_type: full
      include_cve: true
      include_misconfigurations: true
      compliance_frameworks:
        - CIS
        - PCI-DSS
        - NIST
    outputs:
      - vulnerabilities
      - compliance_score
      - risk_level
    validation:
      - check: scan_complete
        command: ls ~/.claude-workflows/security/scan-results/
      - check: no_critical_vulns
        command: grep -c CRITICAL ~/.claude-workflows/security/scan-results/summary.txt || true
    timeout: 1200
    retry: 2

  - id: dependency-check
    name: Dependency Validation
    description: Validate all system dependencies
    agent: oran-nephio-dep-doctor
    depends_on: [security-scan]
    inputs:
      check_versions: true
      check_licenses: true
      check_signatures: true
      allowed_licenses:
        - Apache-2.0
        - MIT
        - BSD-3-Clause
    outputs:
      - dependency_report
      - license_compliance
      - outdated_packages
    validation:
      - check: dependencies_valid
        command: cat ~/.claude-workflows/dependencies/validation.json | jq '.status'
      - check: licenses_compliant
        command: cat ~/.claude-workflows/dependencies/licenses.json | jq '.compliant'
    timeout: 600
    retry: 1

  - id: performance-baseline
    name: Performance Baseline
    description: Establish performance baseline metrics
    agent: performance-optimization-agent
    depends_on: [dependency-check]
    inputs:
      metrics_collection: comprehensive
      baseline_duration: 300
      stress_test: true
      benchmarks:
        - throughput
        - latency
        - resource_usage
    outputs:
      - performance_metrics
      - baseline_report
      - optimization_recommendations
    validation:
      - check: metrics_collected
        command: ls ~/.claude-workflows/metrics/baseline/
      - check: within_sla
        command: cat ~/.claude-workflows/metrics/baseline/sla-check.json | jq '.passed'
    timeout: 900
    retry: 1
    final: true

completion:
  notifications:
    - type: slack
      channel: "#security"
      message: "Validation complete - Score: {{compliance_score}}"
    - type: webhook
      url: "https://compliance.example.com/api/reports"
      method: POST
  artifacts:
    - name: security-report
      format: html
      location: ~/.claude-workflows/reports/security/
    - name: compliance-certificate
      format: pdf
      location: ~/.claude-workflows/certificates/
    - name: performance-baseline
      format: json
      location: ~/.claude-workflows/metrics/
  compliance:
    attestation: true
    sign_report: true
    archive_duration: 365d