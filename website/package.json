{
  "name": "nephio-oran-claude-agents-website",
  "version": "1.0.0",
  "private": true,
  "description": "Docusaurus website for Nephio O-RAN Claude Agents documentation",
  "keywords": [
    "nephio",
    "o-ran",
    "claude",
    "agents",
    "kubernetes",
    "orchestration",
    "cloud-native",
    "docusaurus"
  ],
  "scripts": {
    "docusaurus": "docusaurus",
    "start": "npm run import:agents && docusaurus start --host 0.0.0.0",
    "start:fast": "docusaurus start --host 0.0.0.0",
    "build": "npm run import:agents && npm run validate:content && docusaurus build && npm run security:csp",
    "build:fast": "docusaurus build",
    "build:ci": "npm run import:agents && docusaurus build",
    "build:production": "NODE_ENV=production npm run build",
    "security:csp": "node scripts/generate-csp-hashes.js",
    "security:validate": "node scripts/validate-strengthened-csp.js",
    "security:audit": "npm audit --audit-level moderate && npm run security:headers",
    "security:headers": "echo 'Security headers configured in vercel.json and static/_headers'",
    "security:test": "node scripts/test-security-headers.js",
    "security:all": "npm run security:audit && npm run security:validate && npm run security:test",
    "build:analyze": "ANALYZE=true npm run build",
    "analyze": "cross-env ANALYZE=true npm run build:fast && echo 'Bundle report generated at build/bundle-report.html'",
    "analyze:open": "cross-env ANALYZE=true npm run build:fast && serve build -p 5000",
    "perf:check": "node scripts/performance-check.js",
    "perf:analyze": "npm run analyze && npm run perf:check",
    "swizzle": "docusaurus swizzle",
    "deploy": "docusaurus deploy",
    "build-and-deploy": "npm run build && docusaurus deploy",
    "clear": "docusaurus clear",
    "serve": "docusaurus serve --host 0.0.0.0",
    "serve:build": "npm run build && npm run serve",
    "write-translations": "docusaurus write-translations",
    "write-heading-ids": "docusaurus write-heading-ids",
    "typecheck": "tsc --noEmit",
    "typecheck:src": "tsc --noEmit",
    "typecheck:tests": "tsc --noEmit --project tsconfig.test.json",
    "typecheck:watch": "tsc --noEmit --watch",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
    "lint:check": "eslint src --ext .js,.jsx,.ts,.tsx",
    "lint:md": "markdownlint docs/**/*.md blog/**/*.md --ignore node_modules --fix",
    "lint:md:check": "markdownlint docs/**/*.md blog/**/*.md --ignore node_modules",
    "format": "prettier --write 'src/**/*.{js,jsx,ts,tsx,css,md,mdx}' 'docs/**/*.{md,mdx}' 'blog/**/*.{md,mdx}'",
    "format:check": "prettier --check 'src/**/*.{js,jsx,ts,tsx,css,md,mdx}' 'docs/**/*.{md,mdx}' 'blog/**/*.{md,mdx}'",
    "import:agents": "tsx scripts/import-agents.ts",
    "validate:content": "tsx scripts/validation/content-checker.ts",
    "validate:content:shell": "bash scripts/validation/validate-content.sh",
    "validate:links": "linkinator http://localhost:3000 --recurse --markdown",
    "validate:accessibility": "axe http://localhost:3000 --reporter json --output axe-results.json",
    "test": "npm run typecheck && npm run lint:check && npm run format:check && npm run validate:content",
    "test:ci": "npm run typecheck && npm run lint:check && npm run format:check && npm run validate:content && npm run build:production",
    "test:links": "npm run serve & sleep 10 && npm run validate:links; kill %1",
    "test:accessibility": "npm run serve & sleep 10 && npm run validate:accessibility; kill %1",
    "test:unit": "jest",
    "test:unit:watch": "jest --watch",
    "test:unit:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:routing": "playwright test --config=tests/e2e/routing.config.ts",
    "test:e2e:routing:ui": "playwright test --config=tests/e2e/routing.config.ts --ui",
    "test:e2e:ci": "node scripts/run-e2e-ci.js",
    "install:playwright": "node scripts/install-playwright-ci.js",
    "test:visual": "playwright test --grep visual",
    "test:a11y": "pa11y-ci",
    "test:performance": "lighthouse-ci autorun",
    "test:security": "npm run security:test",
    "test:load": "artillery run tests/load/basic-load-test.yml",
    "test:all": "npm run test:unit && npm run test:e2e && npm run test:e2e:routing && npm run test:a11y && npm run test:security",
    "test:all:ci": "npm run test:unit && npm run test:e2e:ci && npm run test:a11y && npm run test:security",
    "test:routing": "npm run test:unit && npm run test:e2e:routing",
    "test:routing:ci": "npm run test:unit && npm run test:e2e:ci",
    "test:coverage:report": "c8 report --reporter=html --reporter=text",
    "lighthouse": "lhci autorun",
    "lighthouse:desktop": "lhci autorun --config=.lighthouserc.desktop.json",
    "lighthouse:mobile": "lhci autorun --config=.lighthouserc.mobile.json",
    "audit:security": "npm audit --audit-level moderate",
    "audit:fix": "npm audit fix",
    "clean": "npm run clear && rm -rf node_modules package-lock.json",
    "reinstall": "npm run clean && npm install",
    "prebuild": "npm run typecheck",
    "postbuild": "echo 'Build completed successfully! Size:' && du -sh build/",
    "predeploy": "npm run build",
    "prestart": "echo 'Starting development server...'",
    "postinstall": "echo 'Dependencies installed successfully!'",
    "prepare": "cd .. && husky install website/.husky",
    "version": "docusaurus docs:version",
    "docker:build": "docker build -t nephio-oran-docs .",
    "docker:run": "docker run -p 8080:8080 nephio-oran-docs",
    "docker:dev": "docker-compose up dev",
    "docker:prod": "docker-compose up production",
    "docker:test": "docker-compose up test",
    "docker:down": "docker-compose down -v --remove-orphans"
  },
  "dependencies": {
    "@docusaurus/core": "^3.8.1",
    "@docusaurus/preset-classic": "^3.8.1",
    "@docusaurus/theme-search-algolia": "^3.8.1",
    "@mdx-js/react": "^3.1.0",
    "clsx": "^2.1.1",
    "prism-react-renderer": "^2.4.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "devDependencies": {
    "@axe-core/cli": "^4.10.2",
    "@axe-core/playwright": "^4.10.2",
    "@docusaurus/module-type-aliases": "^3.8.1",
    "@docusaurus/tsconfig": "^3.8.1",
    "@docusaurus/types": "^3.8.1",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.49.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.17.2",
    "@types/react": "^18.3.23",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "artillery": "^2.0.21",
    "babel-jest": "^29.7.0",
    "c8": "^10.1.2",
    "chalk": "^4.1.2",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "cssnano": "^7.1.0",
    "eslint": "^9.33.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "glob": "^10.4.5",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-watch-typeahead": "^2.2.2",
    "lighthouse": "^12.2.1",
    "linkinator": "^6.1.4",
    "lint-staged": "^15.5.2",
    "markdownlint-cli": "^0.37.0",
    "msw": "^2.6.5",
    "pa11y": "^8.0.0",
    "prettier": "^3.6.2",
    "puppeteer": "^24.17.0",
    "serve": "^14.2.4",
    "ts-jest": "^29.2.5",
    "tsx": "^4.20.4",
    "typescript": "~5.5.4",
    "wait-on": "^7.2.0",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "browserslist": {
    "production": [
      ">0.5%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 3 chrome version",
      "last 3 firefox version",
      "last 5 safari version"
    ]
  },
  "engines": {
    "node": ">=18.0"
  }
}
